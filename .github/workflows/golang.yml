name: Test Go

on:
  push:
    branches:
      - main
    tags-ignore:
      - '**'
    paths:
      - '**.go'
      - .github/workflows/golang.yml
  pull_request:
    branches:
      - main

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    env:
      GO111MODULE: on

    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - uses: actions/cache@v2.1.6
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
          ~/Library/Caches/go-build
          %LocalAppData%\go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Lint
      run: |
        go get -u golang.org/x/lint/golint
        make lint

    - name: Test
      run: |
        mkdir tmp
        go test -v -coverprofile="c.out"
        go tool cover -func="c.out"

    - name: Gosec Security Scanner
      run: |
        go get -u github.com/securego/gosec/v2/cmd/gosec
        gosec -no-fail -fmt sarif -out results.sarif ./...

    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: results.sarif

    - name: Sarif report
      uses: actions/upload-artifact@v2
      with:
        name: Report
        path: results.sarif   

    - name: Build
      run: |
        go get -d -v .
        go build -v

    - name: Coverage to deepsource
      if: ${{ runner.os == 'Linux' }}
      run: |
        curl https://deepsource.io/cli | sh
        ./bin/deepsource report --analyzer test-coverage --key go --value-file ./c.out
      env: 
        DEEPSOURCE_DSN: ${{ secrets.DEEPSOURCE_DSN }}