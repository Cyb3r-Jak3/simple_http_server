name: Test Go

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'
    paths:
      - 'go.sum'
      - '**.go'
      - .github/workflows/golang.yml
  pull_request:
    branches:
      - main

jobs:
  test:
    permissions:
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    env:
      GO111MODULE: on

    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - uses: actions/cache@v2.1.7
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
          ~/Library/Caches/go-build
          %LocalAppData%\go-build
        key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Get Extra
      run: |
        go get -u golang.org/x/lint/golint
        go get -u github.com/securego/gosec/v2/cmd/gosec


    - name: Lint
      run: make lint

    - name: Test
      run: |
        mkdir tmp
        make coverage-report

    - name: Gosec Security Scanner
      run: make scan

    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: results.sarif

    - name: Sarif report
      uses: actions/upload-artifact@v2
      with:
        name: Report
        path: |
          results.sarif
          coverage.txt

    - name: Build
      run: go build -v

    - name: To CodeCov
      uses: codecov/codecov-action@v2.1.0
      with:
        files: ./coverage.txt

    - name: Coverage to DeepSource
      if: ${{ runner.os == 'Linux' && env.DEEPSOURCE_DSN != '' }}
      run: |
        curl https://deepsource.io/cli | sh
        ./bin/deepsource report --analyzer test-coverage --key go --value-file ./coverage.txt
      env: 
        DEEPSOURCE_DSN: ${{ secrets.DEEPSOURCE_DSN }}